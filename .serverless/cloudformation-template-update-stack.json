{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket"
    },
    "GetDashindexLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/workshop-fgiovanini-dev-get-index"
      }
    },
    "GetDashrestaurantsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/workshop-fgiovanini-dev-get-restaurants"
      }
    },
    "SearchDashrestaurantsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/workshop-fgiovanini-dev-search-restaurants"
      }
    },
    "PlaceDashorderLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/workshop-fgiovanini-dev-place-order"
      }
    },
    "NotifyDashrestaurantLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/workshop-fgiovanini-dev-notify-restaurant"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "dev",
                  "workshop-fgiovanini",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/workshop-fgiovanini-dev-get-index:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/workshop-fgiovanini-dev-get-restaurants:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/workshop-fgiovanini-dev-search-restaurants:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/workshop-fgiovanini-dev-place-order:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/workshop-fgiovanini-dev-notify-restaurant:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/workshop-fgiovanini-dev-get-index:*:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/workshop-fgiovanini-dev-get-restaurants:*:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/workshop-fgiovanini-dev-search-restaurants:*:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/workshop-fgiovanini-dev-place-order:*:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/workshop-fgiovanini-dev-notify-restaurant:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": "dynamodb:scan",
                  "Resource": {
                    "Fn::GetAtt": [
                      "restaurantsTable",
                      "Arn"
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": "kinesis:PutRecord",
                  "Resource": {
                    "Fn::GetAtt": [
                      "orderEventsStream",
                      "Arn"
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": "sns:Publish",
                  "Resource": {
                    "Ref": "restaurantNotificationTopic"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "kinesis:GetRecords",
                    "kinesis:GetShardIterator",
                    "kinesis:DescribeStream",
                    "kinesis:ListStreams"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "orderEventsStream",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "workshop-fgiovanini",
              "dev",
              {
                "Fn::Sub": "${AWS::Region}"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "GetDashindexLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/workshop-fgiovanini/dev/1543660002345-2018-12-01T10:26:42.345Z/workshop-fgiovanini.zip"
        },
        "FunctionName": "workshop-fgiovanini-dev-get-index",
        "Handler": "functions/get-index.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 6,
        "Tags": [
          {
            "Key": "TEAM",
            "Value": "test"
          }
        ],
        "Environment": {
          "Variables": {
            "restaurants_api": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  {
                    "Fn::Sub": ".execute-api.${AWS::Region}.amazonaws.com/dev/restaurants"
                  }
                ]
              ]
            },
            "orders_api": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  {
                    "Fn::Sub": ".execute-api.${AWS::Region}.amazonaws.com/dev/orders"
                  }
                ]
              ]
            }
          }
        }
      },
      "DependsOn": [
        "GetDashindexLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "GetDashindexLambdaVersionWDSH1kaoOIyairL5G7sNvXzqCrRRHEl2cEBXwt2qGU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetDashindexLambdaFunction"
        },
        "CodeSha256": "bh5G5GE2VeIPtqLdKsLqfz6G6TmbiwBwhczg8SmMthg="
      }
    },
    "GetDashrestaurantsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/workshop-fgiovanini/dev/1543660002345-2018-12-01T10:26:42.345Z/workshop-fgiovanini.zip"
        },
        "FunctionName": "workshop-fgiovanini-dev-get-restaurants",
        "Handler": "functions/get-restaurants.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 6,
        "Tags": [
          {
            "Key": "TEAM",
            "Value": "test"
          }
        ],
        "Environment": {
          "Variables": {
            "restaurants_table": {
              "Ref": "restaurantsTable"
            }
          }
        }
      },
      "DependsOn": [
        "GetDashrestaurantsLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "GetDashrestaurantsLambdaVersion2njpSXfAF0Kw16nSVN60mMijxGmSioIHSIGsu9Vnuk": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetDashrestaurantsLambdaFunction"
        },
        "CodeSha256": "bh5G5GE2VeIPtqLdKsLqfz6G6TmbiwBwhczg8SmMthg="
      }
    },
    "SearchDashrestaurantsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/workshop-fgiovanini/dev/1543660002345-2018-12-01T10:26:42.345Z/workshop-fgiovanini.zip"
        },
        "FunctionName": "workshop-fgiovanini-dev-search-restaurants",
        "Handler": "functions/search-restaurants.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 6,
        "Tags": [
          {
            "Key": "TEAM",
            "Value": "test"
          }
        ],
        "Environment": {
          "Variables": {
            "restaurants_table": {
              "Ref": "restaurantsTable"
            }
          }
        }
      },
      "DependsOn": [
        "SearchDashrestaurantsLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "SearchDashrestaurantsLambdaVersioneLjRUysEYl5Ku9x0Den9dhuNZiBNMD6iPVSJ3vWFduU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SearchDashrestaurantsLambdaFunction"
        },
        "CodeSha256": "bh5G5GE2VeIPtqLdKsLqfz6G6TmbiwBwhczg8SmMthg="
      }
    },
    "PlaceDashorderLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/workshop-fgiovanini/dev/1543660002345-2018-12-01T10:26:42.345Z/workshop-fgiovanini.zip"
        },
        "FunctionName": "workshop-fgiovanini-dev-place-order",
        "Handler": "functions/place-order.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 6,
        "Tags": [
          {
            "Key": "TEAM",
            "Value": "test"
          }
        ],
        "Environment": {
          "Variables": {
            "order_events_stream": {
              "Ref": "orderEventsStream"
            }
          }
        }
      },
      "DependsOn": [
        "PlaceDashorderLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "PlaceDashorderLambdaVersion6t2SrjMaXxm5aWo1RXLd9f4ZvDFkRX67JX6wW9WVkQ": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "PlaceDashorderLambdaFunction"
        },
        "CodeSha256": "bh5G5GE2VeIPtqLdKsLqfz6G6TmbiwBwhczg8SmMthg="
      }
    },
    "NotifyDashrestaurantLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/workshop-fgiovanini/dev/1543660002345-2018-12-01T10:26:42.345Z/workshop-fgiovanini.zip"
        },
        "FunctionName": "workshop-fgiovanini-dev-notify-restaurant",
        "Handler": "functions/notify-restaurant.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 6,
        "Tags": [
          {
            "Key": "TEAM",
            "Value": "test"
          }
        ],
        "Environment": {
          "Variables": {
            "order_events_stream": {
              "Ref": "orderEventsStream"
            },
            "restaurant_notification_topic": {
              "Ref": "restaurantNotificationTopic"
            }
          }
        }
      },
      "DependsOn": [
        "NotifyDashrestaurantLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "NotifyDashrestaurantLambdaVersion6RcpERU2LrfWZaypvdIMRil4Xe4hta1oLo4wl0HsRPo": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "NotifyDashrestaurantLambdaFunction"
        },
        "CodeSha256": "bh5G5GE2VeIPtqLdKsLqfz6G6TmbiwBwhczg8SmMthg="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-workshop-fgiovanini",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        }
      }
    },
    "ApiGatewayResourceRestaurants": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "restaurants",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceRestaurantsSearch": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceRestaurants"
        },
        "PathPart": "search",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceOrders": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "orders",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetDashindexLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayMethodRestaurantsGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceRestaurants"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetDashrestaurantsLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayMethodRestaurantsSearchPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceRestaurantsSearch"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "SearchDashrestaurantsLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayMethodOrdersPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceOrders"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "PlaceDashorderLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayDeployment1543660002577": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodGet",
        "ApiGatewayMethodRestaurantsGet",
        "ApiGatewayMethodRestaurantsSearchPost",
        "ApiGatewayMethodOrdersPost"
      ]
    },
    "GetDashindexLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetDashindexLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": {
          "Fn::Join": [
            "",
            [
              "apigateway.",
              {
                "Ref": "AWS::URLSuffix"
              }
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "GetDashrestaurantsLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetDashrestaurantsLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": {
          "Fn::Join": [
            "",
            [
              "apigateway.",
              {
                "Ref": "AWS::URLSuffix"
              }
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "SearchDashrestaurantsLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SearchDashrestaurantsLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": {
          "Fn::Join": [
            "",
            [
              "apigateway.",
              {
                "Ref": "AWS::URLSuffix"
              }
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "PlaceDashorderLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "PlaceDashorderLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": {
          "Fn::Join": [
            "",
            [
              "apigateway.",
              {
                "Ref": "AWS::URLSuffix"
              }
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "NotifyDashrestaurantEventSourceMappingKinesisOrderEventsStream": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": "IamRoleLambdaExecution",
      "Properties": {
        "BatchSize": 10,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "orderEventsStream",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "NotifyDashrestaurantLambdaFunction",
            "Arn"
          ]
        },
        "StartingPosition": "TRIM_HORIZON",
        "Enabled": "True"
      }
    },
    "restaurantsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "restaurants-dev-fgiovanini",
        "AttributeDefinitions": [
          {
            "AttributeName": "name",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "name",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        }
      }
    },
    "orderEventsStream": {
      "Type": "AWS::Kinesis::Stream",
      "Properties": {
        "Name": "orders-dev-fgiovanini",
        "ShardCount": 1
      }
    },
    "restaurantNotificationTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "restaurants-dev-fgiovanini",
        "TopicName": "restaurants-dev-fgiovanini"
      }
    },
    "mySubscription": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Endpoint": "giovanini.fernando@gmail.com",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "restaurantNotificationTopic"
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "GetDashindexLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetDashindexLambdaVersionWDSH1kaoOIyairL5G7sNvXzqCrRRHEl2cEBXwt2qGU"
      }
    },
    "GetDashrestaurantsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetDashrestaurantsLambdaVersion2njpSXfAF0Kw16nSVN60mMijxGmSioIHSIGsu9Vnuk"
      }
    },
    "SearchDashrestaurantsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SearchDashrestaurantsLambdaVersioneLjRUysEYl5Ku9x0Den9dhuNZiBNMD6iPVSJ3vWFduU"
      }
    },
    "PlaceDashorderLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "PlaceDashorderLambdaVersion6t2SrjMaXxm5aWo1RXLd9f4ZvDFkRX67JX6wW9WVkQ"
      }
    },
    "NotifyDashrestaurantLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "NotifyDashrestaurantLambdaVersion6RcpERU2LrfWZaypvdIMRil4Xe4hta1oLo4wl0HsRPo"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            {
              "Fn::Sub": ".execute-api.${AWS::Region}."
            },
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      }
    }
  }
}